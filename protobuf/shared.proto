syntax = "proto2";
package starbelly;

// Contains a crawl item, i.e. something downloaded by the crawler.
message CrawlItem {
    optional bytes body = 1;
    optional string charset = 2;
    optional string completed_at = 3;
    optional string content_type = 4;
    optional double cost = 5;
    optional double duration = 6;
    optional string exception = 7;
    map<string,string> headers = 8;
    optional bool is_body_compressed = 9;
    optional bool is_success = 10;
    optional bytes job_id = 11;
    optional string started_at = 12;
    optional int32 status_code = 13;
    optional string url = 14;
    optional string url_can = 15;
    optional bytes url_hash = 16;

    // This field is used while syncing to keep track of which items have
    // already been synced.
    optional bytes sync_token = 17;
}

// The various run states a job may have.
enum JobRunState {
    UNKNOWN = 1;
    CANCELLED = 2;
    COMPLETED = 3;
    PAUSED = 4;
    PENDING = 5;
    RUNNING = 6;
}

// A crawl job.
message Job {
    required bytes job_id = 1;
    optional string name = 2;
    repeated string seeds = 3;
    optional JobRunState run_state = 4;
    optional string started_at = 5;
    optional string completed_at = 6;
    optional int32 item_count = 7 [default = -1];
    optional int32 http_success_count = 8 [default = -1];
    optional int32 http_error_count = 9 [default = -1];
    optional int32 exception_count = 10 [default = -1];
    map<int32, int32> http_status_counts = 11;
}

// A list of jobs.
//
// This seemingly stupid message is necessary so that a list of jobs can be
// used as the body of a "oneof".
message JobList {
    repeated Job jobs = 1;
}

// For paginating large sets.
message Page {
    optional int32 limit = 1 [default = 10];
    optional int32 offset = 2;
}

// Model for a rate limit.
//
// If domain is not specified, the global rate limit is modified. If delay
// is not specified, then the rate limit for the specified domain is deleted.
// Either delay or domain must be specified: you are not allowed to delete the
// global limit.
//
// Name is optional: if the client sends a name, the server ignores it. The
// server will always send a name to the client.
message RateLimit {
    optional string name = 1;
    optional float delay = 2;
    optional string domain = 3;
}
